package com.amazonaws.sfc.canbus.jna;

import com.sun.jna.Structure;
import com.sun.jna.Union;

import java.util.Arrays;
import java.util.List;
/**
 * struct sockaddr_can - the sockaddr structure for CAN sockets<br>
 * @can_family:  address family number AF_CAN.<br>
 * @can_ifindex: CAN network interface index.<br>
 * @can_addr:    protocol specific address information<br>
 * This file was autogenerated by <a href="https://github.com/nativelibs4java/JNAerator">JNAerator</a> */
@SuppressWarnings({"unused", "SpellCheckingInspection"})
public class sockaddr_can extends Structure {
	/** C type : __kernel_sa_family_t */
	public short can_family;
	public int can_ifindex;
	/** C type : can_addr_union */
	public can_addr_union can_addr;
	/** <i>native declaration : can.h:80</i> */
	public static class can_addr_union extends Union {
		/**
		 * transport protocol class address information (e.g. ISOTP)<br>
		 * C type : tp_struct
		 */
		public tp_struct tp;
		/** <i>native declaration : can.h:82</i> */
		public static class tp_struct extends Structure {
			/** C type : canid_t */
			public int rx_id;
			/** C type : canid_t */
			public int tx_id;
			public tp_struct() {
				super();
			}
			protected List<String> getFieldOrder() {
				return Arrays.asList("rx_id", "tx_id");
			}
			/**
			 * @param rx_id C type : canid_t<br>
			 * @param tx_id C type : canid_t
			 */
			public tp_struct(int rx_id, int tx_id) {
				super();
				this.rx_id = rx_id;
				this.tx_id = tx_id;
			}
			public static class ByReference extends tp_struct implements Structure.ByReference {
				
			};
			public static class ByValue extends tp_struct implements Structure.ByValue {
				
			};
		};
		public can_addr_union() {
			super();
		}
		/**
		 * @param tp transport protocol class address information (e.g. ISOTP)<br>
		 * C type : tp_struct
		 */
		public can_addr_union(tp_struct tp) {
			super();
			this.tp = tp;
			setType(tp_struct.class);
		}
		public static class ByReference extends can_addr_union implements Structure.ByReference {
			
		};
		public static class ByValue extends can_addr_union implements Structure.ByValue {
			
		};
	};
	public sockaddr_can() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("can_family", "can_ifindex", "can_addr");
	}
	/**
	 * @param can_family C type : __kernel_sa_family_t<br>
	 * @param can_addr C type : can_addr_union
	 */
	public sockaddr_can(short can_family, int can_ifindex, can_addr_union can_addr) {
		super();
		this.can_family = can_family;
		this.can_ifindex = can_ifindex;
		this.can_addr = can_addr;
	}
	public static class ByReference extends sockaddr_can implements Structure.ByReference {
		
	};
	public static class ByValue extends sockaddr_can implements Structure.ByValue {
		
	};
	
	public sockaddr toSockAddr() {
	    write();
	    sockaddr sockAddr = new sockaddr(getPointer());
	    sockAddr.read();
	    return sockAddr;
	}
}
