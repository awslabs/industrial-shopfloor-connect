package com.amazonaws.sfc.canbus.jna;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * CAN bit-timing parameters<br>
 * * For further information, please read chapter "8 BIT TIMING<br>
 * REQUIREMENTS" of the "Bosch CAN Specification version 2.0"<br>
 * at http://www.semiconductors.bosch.de/pdf/can2spec.pdf.<br>
 * This file was autogenerated by <a href="https://github.com/nativelibs4java/JNAerator">JNAerator</a> */
@SuppressWarnings({"unused", "SpellCheckingInspection"})
public class can_bittiming extends Structure {
	/**
	 * Bit-rate in bits/second<br>
	 * C type : __u32
	 */
	public int bitrate;
	/**
	 * Sample point in one-tenth of a percent<br>
	 * C type : __u32
	 */
	public int sample_point;
	/**
	 * Time quanta (TQ) in nanoseconds<br>
	 * C type : __u32
	 */
	public int tq;
	/**
	 * Propagation segment in TQs<br>
	 * C type : __u32
	 */
	public int prop_seg;
	/**
	 * Phase buffer segment 1 in TQs<br>
	 * C type : __u32
	 */
	public int phase_seg1;
	/**
	 * Phase buffer segment 2 in TQs<br>
	 * C type : __u32
	 */
	public int phase_seg2;
	/**
	 * Synchronisation jump width in TQs<br>
	 * C type : __u32
	 */
	public int sjw;
	/**
	 * Bit-rate prescaler<br>
	 * C type : __u32
	 */
	public int brp;
	public can_bittiming() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("bitrate", "sample_point", "tq", "prop_seg", "phase_seg1", "phase_seg2", "sjw", "brp");
	}
	/**
	 * @param bitrate Bit-rate in bits/second<br>
	 * C type : __u32<br>
	 * @param sample_point Sample point in one-tenth of a percent<br>
	 * C type : __u32<br>
	 * @param tq Time quanta (TQ) in nanoseconds<br>
	 * C type : __u32<br>
	 * @param prop_seg Propagation segment in TQs<br>
	 * C type : __u32<br>
	 * @param phase_seg1 Phase buffer segment 1 in TQs<br>
	 * C type : __u32<br>
	 * @param phase_seg2 Phase buffer segment 2 in TQs<br>
	 * C type : __u32<br>
	 * @param sjw Synchronisation jump width in TQs<br>
	 * C type : __u32<br>
	 * @param brp Bit-rate prescaler<br>
	 * C type : __u32
	 */
	public can_bittiming(int bitrate, int sample_point, int tq, int prop_seg, int phase_seg1, int phase_seg2, int sjw, int brp) {
		super();
		this.bitrate = bitrate;
		this.sample_point = sample_point;
		this.tq = tq;
		this.prop_seg = prop_seg;
		this.phase_seg1 = phase_seg1;
		this.phase_seg2 = phase_seg2;
		this.sjw = sjw;
		this.brp = brp;
	}
	public static class ByReference extends can_bittiming implements Structure.ByReference {
		
	};
	public static class ByValue extends can_bittiming implements Structure.ByValue {
		
	};
}
